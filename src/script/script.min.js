const vid=document.querySelector(".vid-player"),canvas=document.querySelector("canvas"),ctx=canvas.getContext("2d"),fullScreenBtn=document.querySelector(".full-screen"),toggleTools=document.querySelectorAll(".toggle-tools button"),soundRange=document.querySelector(".sound-level input"),camOffOverlay=document.querySelector(".cam-off-overlay"),camToggle=document.querySelector(".cam-toggle"),audToggle=document.querySelector(".aud-toggle"),filterTrayInputs=[...document.querySelectorAll(".filter-tray .normal-filters div input"),],afterEffects=[...document.querySelectorAll(".afterEffects button")],blurOverlay=document.querySelector(".blur-overlay"),liveOverlay=document.querySelector(".live-overlay"),screenShotBtn=document.querySelector(".tool-tray .screenshot"),screenShotEmptyTray=document.querySelector(".screenshot-tray .empty-tray");let isCamOn;const camOnOff=()=>{let e=camToggle.firstElementChild;camSvg=e.nextElementSibling,cList=camOffOverlay.classList,(isCamOn=!isCamOn)?(camToggle.setAttribute("aria-pressed",!0),liveOverlay.classList.remove("hidden")):(camToggle.setAttribute("aria-pressed",!1),liveOverlay.classList.add("hidden")),cList.toggle("hidden"),camSvg.classList.toggle("hidden"),camSvg.nextElementSibling.classList.toggle("hidden"),getVideo(isCamOn)};toggleTools[0].addEventListener("click",camOnOff);const webcamOn=e=>{vid.srcObject=e,vid.play()},webcamOff=e=>{vid.srcObject=e,vid.pause()},getVideo=e=>{navigator.mediaDevices.getUserMedia({video:!0,audio:!0}).then(t=>{e?webcamOn(t):webcamOff(null)}).catch(e=>{alert("Error : "+e)})},micMuteUnmute=()=>{let e=audToggle.firstElementChild.nextElementSibling;e.classList.toggle("hidden"),e.nextElementSibling.classList.toggle("hidden"),vid.muted=!vid.muted,vid.muted?audToggle.setAttribute("aria-pressed",!0):audToggle.setAttribute("aria-pressed",!1)};toggleTools[1].addEventListener("click",micMuteUnmute);let hasTakenScreenShot;const strip=document.querySelector(".strip"),getScreenshot=()=>{let e=canvas.toDataURL("image/jpeg"),t=document.createElement("a");t.href=e,t.setAttribute("download","CammerX_Screenshot"),t.innerHTML=`<img src="${e}" alt="Handsome Man" class="shadow-[-1px_0px_4px_0px_#000000b3]  h-full rounded-xl bg-cover bg-center border-2 border-[#000000b3] opacity-75  transition-all duration-300 mb-2" title = "Click to download"/>
  <button class="absolute bottom-3 right-3 dwnld-img shadow-2xl hover:shadow-[0px_0px_1rem_5px_#00000020]  bg-green-500 hover:bg-green-600 text-white font-bold p-2 inline-flex rounded-full items-center">
  <img src="./images/icons/download.svg" alt="Download button svg for downloading screenshots">
  </button>`,strip.innerHTML="",strip.appendChild(t),(hasTakenScreenShot=""!=strip.innerHTML)?screenShotEmptyTray.classList.add("hidden"):screenShotEmptyTray.classList.remove("hidden")};toggleTools[2].addEventListener("click",getScreenshot);const changeVidVolume=e=>{vid.volume=soundRange.value/10;let t=toggleTools.firstElementChild.nextElementSibling,r=0===vid.volume;t.classList.toggle("hidden",r),t.nextElementSibling.classList.toggle("hidden",!r)};soundRange.addEventListener("change",changeVidVolume);let clicked;toggleTools[3].addEventListener("click",e=>{soundRange.classList.toggle("hidden"),(clicked=!clicked)?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1)});const enterFullScreen=e=>{e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()};let isClicked;fullScreenBtn.addEventListener("click",e=>{let t=e.currentTarget.firstElementChild.nextElementSibling;t.classList.toggle("hidden"),t.nextElementSibling.classList.toggle("hidden"),enterFullScreen(vid),(isClicked=!isClicked)?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1)}),document.addEventListener("fullscreenchange",e=>{document.fullscreenElement?console.log("Entered fullscreen:",document.fullscreenElement):console.log("Exited fullscreen.")});const filter=(e,t,r)=>{let a="";a+=`${t}(${e.currentTarget.value}${r}) `,ctx.filter=a},indexFilter=[{blur:"px"},{grayscale:"%"},{brightness:"%"},{contrast:"%"},{saturate:"%"},{sepia:"%"},{invert:"%"},];let iterator=0;filterTrayInputs.forEach(e=>{let t=Object.keys(indexFilter[iterator])[0],r=indexFilter[iterator][t];e.addEventListener("input",e=>{filter(e,`${t}`,`${r}`),e.currentTarget.setAttribute("aria-valuenow",e.currentTarget.value)}),++iterator});const hdr=e=>{for(let t=0;t<e.data.length;t+=4)e.data[t]=Math.min(255,1.5*e.data[t]),e.data[t+1]=Math.min(255,1.5*e.data[t+1]),e.data[t+2]=Math.min(255,1.5*e.data[t+2]);return e};afterEffects[0].addEventListener("click",e=>{(isHDR=!isHDR)?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1),e.currentTarget.classList.toggle("border-dashed")});const overlayToggle=e=>{e.currentTarget.firstElementChild.classList.toggle("hidden")};afterEffects.forEach(e=>{e.addEventListener("mouseover",overlayToggle),e.addEventListener("mouseout",overlayToggle)});const matrixDot=e=>{for(let t=0;t<canvas.height;t+=5)for(let r=0;r<canvas.width;r+=5){let a=(t*canvas.width+r)*4;for(let s=0;s<5;s++)for(let i=0;i<5;i++){let n=((t+s)*canvas.width+(r+i))*4;e.data[a]=e.data[n]+5,e.data[a+1]=e.data[n+1]+5,e.data[a+2]=e.data[n+2]+5}}return e};afterEffects[1].addEventListener("click",e=>{(isMatrixDot=!isMatrixDot)?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1),e.currentTarget.classList.toggle("border-dashed")});const rgbSplit=e=>{for(let t=0;t<e.data.length;t+=4)e.data[t-150]=e.data[t+0],e.data[t+500]=e.data[t+1],e.data[t-550]=e.data[t+2];return e};afterEffects[2].addEventListener("click",e=>{(isRGBSplit=!isRGBSplit)?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1),e.currentTarget.classList.toggle("border-dashed")});const redEffect=e=>{for(let t=0;t<e.data.length;t+=4)e.data[t+0]=e.data[t+0]+200,e.data[t+1]=e.data[t+1]-50,e.data[t+2]=.5*e.data[t+2];return e};afterEffects[3].addEventListener("click",e=>{(isRedEffect=!isRedEffect)?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1),e.currentTarget.classList.toggle("border-dashed")});const pixelationEffect=()=>{ctx.drawImage(vid,0,0,canvas.width/10,canvas.height/10),ctx.imageSmoothingEnabled=!1,ctx.drawImage(canvas,0,0,canvas.width/10,canvas.height/10,0,0,canvas.width,canvas.height)};afterEffects[4].addEventListener("click",e=>{(isPixelationEffect=!isPixelationEffect)?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1),e.currentTarget.classList.toggle("border-dashed")});const vintageEffect=()=>{ctx.filter="sepia(0.4) brightness(0.8) contrast(1.2) saturate(0.8)"};afterEffects[5].addEventListener("click",e=>{(isVintageEffect=!isVintageEffect)||(ctx.filter="none"),isVintageEffect?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1),e.currentTarget.classList.toggle("border-dashed")});const mirrorEffect=e=>{let t=ctx.createImageData(canvas.width,canvas.height),r=t.data;for(let a=0;a<canvas.height;a++)for(let s=0;s<canvas.width;s++){let i=(a*canvas.width+s)*4,n=(a*canvas.width+(canvas.width-s-1))*4;r[n]=e.data[i],r[n+1]=e.data[i+1],r[n+2]=e.data[i+2],r[n+3]=e.data[i+3]}return t};afterEffects[6].addEventListener("click",e=>{(ismirrorEffect=!ismirrorEffect)?e.currentTarget.setAttribute("aria-pressed",!0):e.currentTarget.setAttribute("aria-pressed",!1),e.currentTarget.classList.toggle("border-dashed")});let isRGBSplit,isRedEffect,isHDR,isMatrixDot,isPixelationEffect,isVintageEffect,ismirrorEffect;const vidOnCanva=()=>{let e=vid.videoWidth,t=vid.videoHeight;return canvas.width=e,canvas.height=t,ctx.filter=blur("100px"),setInterval(()=>{ctx.drawImage(vid,0,0,e,t);let r=ctx.getImageData(0,0,e,t);r=isRedEffect?redEffect(r):r,r=isRGBSplit?rgbSplit(r):r,r=isHDR?hdr(r):r,r=isMatrixDot?matrixDot(r):r,r=ismirrorEffect?mirrorEffect(r):r,isPixelationEffect&&pixelationEffect(),isVintageEffect&&vintageEffect(),isPixelationEffect||ctx.putImageData(r,0,0)},16)};vid.addEventListener("canplay",vidOnCanva),window.addEventListener("keydown",e=>{"m"===e.key&&e.ctrlKey&&micMuteUnmute(),"q"===e.key&&e.ctrlKey&&camOnOff(),e.ctrlKey&&e.altKey&&"s"===e.key&&getScreenshot()});